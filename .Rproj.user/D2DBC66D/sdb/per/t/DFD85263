{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\n\nshinyServer(function(input, output) {\n        \n      KPI_great <- reactive({input$KPI1})     \n      KPI_average <- reactive({input$KPI2})\n      rv <- reactiveValues(alpha = 0.50)\n      observeEvent(input$light, { rv$alpha <- 0.50 })\n      observeEvent(input$dark, { rv$alpha <- 0.75 })\n    \n      df1 <- eventReactive(input$clicks1, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n            \"select EMH, DISTRICTNAME, kpi, \n            case\n            when kpi < \"p1\" then \\\\\\'Great\\\\\\'\n            when kpi < \"p2\" then \\\\\\'Average\\\\\\'\n            else \\\\\\'Ok\\\\\\'\n            end kpi                                                                   \n            from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi\n            from FINAL_GRADE\n            where FINAL_PLANTYPE = \\\\\\'Turnaround Plan\\\\\\'\n            group by EMH, DISTRICTNAME)\n            order by DISTRICTNAME;\"\n            ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', \n                 MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great(), p2=KPI_average()), verbose = TRUE)))\n      })\n\n      output$distPlot1 <- renderPlot({             \n            plot <- ggplot() + \n                  coord_cartesian() + \n                  scale_x_discrete() +\n                  scale_y_discrete() +\n                  labs(title=isolate(input$title)) +\n                  labs(x=paste(\"District Name\"), y=paste(\"EMH\")) +\n                  layer(data=df1(), \n                        mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI), \n                        stat=\"identity\", \n                        stat_params=list(), \n                        geom=\"text\",\n                        geom_params=list(colour=\"black\"), \n                        position=position_identity()\n                  ) +\n                  layer(data=df1(), \n                        mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1), \n                        stat=\"identity\", \n                        stat_params=list(), \n                        geom=\"tile\",\n                        geom_params=list(alpha=rv$alpha), \n                        position=position_identity()\n                  )\n            plot\n      }) \n\n      observeEvent(input$clicks, {\n            print(as.numeric(input$clicks))\n      })\n})\n",
    "created" : 1448174925424.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3889802249",
    "id" : "DFD85263",
    "lastKnownWriteTime" : 1448175175,
    "path" : "~/DataVisualization/DV_RProject1/server.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}